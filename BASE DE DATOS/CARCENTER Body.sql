--------------------------------------------------------
-- Archivo creado  - viernes-septiembre-22-2023   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Package Body CARCENTER
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "CESAR_PERDOMO"."CARCENTER" 
AS  
L_NOMBRE_PACKAGE VARCHAR2(100):='PKG_CARCENTER';

PROCEDURE GUARDAR_LOG_ERROR(PAR_NOMBRE_PACKAGE IN LOG_ERRORES.NOMBRE_PACKAGE%TYPE,   
                            PAR_NOMBRE_PROCEDIMIENTO IN LOG_ERRORES.NOMBRE_PROCEDIMIENTO%TYPE,   
                            PAR_PARAMETROS IN LOG_ERRORES.PARAMETROS%TYPE,
                            PAR_CODIGO_RESPUESTA IN LOG_ERRORES.CODIGO_RESPUESTA%TYPE,
							PAR_MENSAJE_RESPUESTA IN LOG_ERRORES.MENSAJE_RESPUESTA%TYPE)AS
 BEGIN

 INSERT INTO LOG_ERRORES (
    NOMBRE_PACKAGE,
    NOMBRE_PROCEDIMIENTO,
    PARAMETROS,
    CODIGO_RESPUESTA,
    MENSAJE_RESPUESTA
) VALUES (
   PAR_NOMBRE_PACKAGE,
   PAR_NOMBRE_PROCEDIMIENTO,
   PAR_PARAMETROS,
   PAR_CODIGO_RESPUESTA,
   PAR_MENSAJE_RESPUESTA
);

END GUARDAR_LOG_ERROR;





PROCEDURE REGISTRAR_CLIENTE(PAR_TIPO_DOCUMENTO IN CLIENTE.TIPO_DOCUMENTO%TYPE,   
                        PAR_DOCUMENTO IN CLIENTE.DOCUMENTO%TYPE,   
                        PAR_PRIMER_NOMBRE IN CLIENTE.PRIMER_NOMBRE%TYPE,   
                        PAR_SEGUNDO_NOMBRE IN CLIENTE.SEGUNDO_NOMBRE%TYPE,   
                        PAR_PRIMER_APELLIDO IN CLIENTE.PRIMER_APELLIDO%TYPE,   
                        PAR_SEGUNDO_APELLIDO IN CLIENTE.SEGUNDO_APELLIDO%TYPE,   
                        PAR_CELULAR IN CLIENTE.CELULAR%TYPE,     
                        PAR_CORREO IN CLIENTE.CORREO%TYPE,     
                        PAR_DIRECCION IN CLIENTE.DIRECCION%TYPE,
                        PAR_CODIGO_RESPUESTA OUT VARCHAR2,
                        PAR_MENSAJE_RESPUESTA OUT VARCHAR2)
                        AS
  L_NOMBRE_PROCEDIMIENTO VARCHAR2(50):='REGISTRAR_CLIENTE';
  L_PARAMETROS VARCHAR2(4000):='';
  
 BEGIN

L_PARAMETROS:='PAR_TIPO_DOCUMENTO: '||PAR_TIPO_DOCUMENTO
            ||' PAR_DOCUMENTO: '||PAR_DOCUMENTO
            ||' PAR_PRIMER_NOMBRE: '||PAR_PRIMER_NOMBRE
            ||' PAR_SEGUNDO_NOMBRE: '||PAR_SEGUNDO_NOMBRE
            ||' PAR_PRIMER_APELLIDO: '||PAR_PRIMER_APELLIDO
            ||' PAR_SEGUNDO_APELLIDO: '||PAR_SEGUNDO_APELLIDO
            ||' PAR_CELULAR: '||PAR_CELULAR
            ||' PAR_CORREO: '||PAR_CORREO
            ||' PAR_DIRECCION: '||PAR_DIRECCION ;
 
    IF(PAR_TIPO_DOCUMENTO IS NULL ) THEN 
        PAR_CODIGO_RESPUESTA:=0;
        PAR_MENSAJE_RESPUESTA:='Tipo Documento Vacio';
        GOTO FIN;
    ELSIF(PAR_DOCUMENTO IS NULL ) THEN   
        PAR_CODIGO_RESPUESTA:=2;
        PAR_MENSAJE_RESPUESTA:='Documento Vacio';
        GOTO FIN;
    ELSIF(PAR_PRIMER_NOMBRE IS NULL ) THEN   
        PAR_CODIGO_RESPUESTA:=3;
        PAR_MENSAJE_RESPUESTA:='Primer Nombre Vacio';
        GOTO FIN;
    ELSIF(PAR_PRIMER_APELLIDO IS NULL ) THEN   
        PAR_CODIGO_RESPUESTA:=4;
        PAR_MENSAJE_RESPUESTA:='Primer Apellido Vacio';
    GOTO FIN;
    ELSIF(PAR_CELULAR IS NULL ) THEN   
        PAR_CODIGO_RESPUESTA:=5;
        PAR_MENSAJE_RESPUESTA:='Celular Vacio';
    GOTO FIN;   
    ELSIF(PAR_CORREO IS NULL ) THEN   
        PAR_CODIGO_RESPUESTA:=6;
        PAR_MENSAJE_RESPUESTA:='Correo Vacio';
    GOTO FIN;   
    END IF;
                          
INSERT INTO CLIENTE (
    TIPO_DOCUMENTO,
    DOCUMENTO,
    PRIMER_NOMBRE,
    SEGUNDO_NOMBRE,
    PRIMER_APELLIDO,
    SEGUNDO_APELLIDO,
    CELULAR,
    DIRECCION,
    CORREO  
) VALUES (
    PAR_TIPO_DOCUMENTO,
    PAR_DOCUMENTO,
    PAR_PRIMER_NOMBRE,
    PAR_SEGUNDO_NOMBRE,
    PAR_PRIMER_APELLIDO,
    PAR_SEGUNDO_APELLIDO,
    PAR_CELULAR,
    PAR_CORREO,
    PAR_DIRECCION
);

    PAR_CODIGO_RESPUESTA:= 1;
    PAR_MENSAJE_RESPUESTA:='Registro Exitoso';

 <<FIN>>
    PAR_CODIGO_RESPUESTA:=PAR_CODIGO_RESPUESTA;
    PAR_MENSAJE_RESPUESTA:=PAR_MENSAJE_RESPUESTA;

EXCEPTION 
    WHEN OTHERS THEN 
         PAR_CODIGO_RESPUESTA:= 99;
    PAR_MENSAJE_RESPUESTA:='Error Consumo';
    GUARDAR_LOG_ERROR(PAR_NOMBRE_PACKAGE =>L_NOMBRE_PACKAGE, 
                    PAR_NOMBRE_PROCEDIMIENTO=>L_NOMBRE_PROCEDIMIENTO,
                    PAR_PARAMETROS=>L_PARAMETROS,
                    PAR_CODIGO_RESPUESTA=>SQLCODE,
                    PAR_MENSAJE_RESPUESTA=> SQLERRM||DBMS_UTILITY.format_error_backtrace);



END REGISTRAR_CLIENTE;






PROCEDURE REGISTRAR_VEHICULOS(PAR_TIPO_DOCUMENTO IN CLIENTE.TIPO_DOCUMENTO%TYPE,   
                        PAR_DOCUMENTO IN CLIENTE.TIPO_DOCUMENTO%TYPE,   
                        PAR_PLACA IN VEHICULOS.PLACA%TYPE,   
                        PAR_COLOR IN VEHICULOS.COLOR%TYPE, 
                        PAR_MARCA IN VEHICULOS.PK_MARCA%TYPE,   
                        PAR_CODIGO_RESPUESTA OUT VARCHAR2,
                        PAR_MENSAJE_RESPUESTA OUT VARCHAR2)
                        AS
  L_NOMBRE_PROCEDIMIENTO VARCHAR2(50):='REGISTRAR_VEHICULOS';
  L_PARAMETROS VARCHAR2(4000):='';
  
 BEGIN

L_PARAMETROS:='PAR_TIPO_DOCUMENTO: '||PAR_TIPO_DOCUMENTO
            ||' PAR_DOCUMENTO: '||PAR_DOCUMENTO
            ||' PAR_PLACA: '||PAR_PLACA
            ||' PAR_MARCA: '||PAR_MARCA;
 
    IF(PAR_TIPO_DOCUMENTO IS NULL ) THEN 
        PAR_CODIGO_RESPUESTA:=0;
        PAR_MENSAJE_RESPUESTA:='Tipo Documento Vacio';
        GOTO FIN;
    ELSIF(PAR_DOCUMENTO IS NULL ) THEN   
        PAR_CODIGO_RESPUESTA:=2;
        PAR_MENSAJE_RESPUESTA:='Documento Vacio';
        GOTO FIN;
    ELSIF(PAR_PLACA IS NULL ) THEN   
        PAR_CODIGO_RESPUESTA:=3;
        PAR_MENSAJE_RESPUESTA:='Placa Vacio';
        GOTO FIN;
    ELSIF(PAR_MARCA IS NULL ) THEN   
        PAR_CODIGO_RESPUESTA:=4;
        PAR_MENSAJE_RESPUESTA:='Marca Vacio';
    GOTO FIN;
    END IF;
                          
INSERT INTO VEHICULOS (
    PLACA,
    COLOR,
    PK_MARCA,
    TIPO_DOCUMENTO,
    DOCUMENTO
) VALUES (
    PAR_PLACA,
    PAR_COLOR,
    PAR_MARCA,
    PAR_TIPO_DOCUMENTO,
    PAR_DOCUMENTO
);

    PAR_CODIGO_RESPUESTA:= 1;
    PAR_MENSAJE_RESPUESTA:='Registro Exitoso';

 <<FIN>>
    PAR_CODIGO_RESPUESTA:=PAR_CODIGO_RESPUESTA;
    PAR_MENSAJE_RESPUESTA:=PAR_MENSAJE_RESPUESTA;

EXCEPTION 
    WHEN OTHERS THEN 
         PAR_CODIGO_RESPUESTA:= 99;
    PAR_MENSAJE_RESPUESTA:='Error Consumo';
    GUARDAR_LOG_ERROR(PAR_NOMBRE_PACKAGE =>L_NOMBRE_PACKAGE, 
                    PAR_NOMBRE_PROCEDIMIENTO=>L_NOMBRE_PROCEDIMIENTO,
                    PAR_PARAMETROS=>L_PARAMETROS,
                    PAR_CODIGO_RESPUESTA=>SQLCODE,
                    PAR_MENSAJE_RESPUESTA=> SQLERRM||DBMS_UTILITY.format_error_backtrace);



END REGISTRAR_VEHICULOS;



PROCEDURE CONSULTAR_MARCAS(
                        PAR_MARCA OUT SYS_REFCURSOR,   
                        PAR_CODIGO_RESPUESTA OUT VARCHAR2,
                        PAR_MENSAJE_RESPUESTA OUT VARCHAR2)
                        AS
  L_NOMBRE_PROCEDIMIENTO VARCHAR2(50):='CONSULTAR_MARCAS';
  L_PARAMETROS VARCHAR2(4000):='';
  
 BEGIN
OPEN PAR_MARCA FOR SELECT
                        PK_MARCAS,
                        NOMBRE_MARCAS
                    FROM
                        MARCAS;

    PAR_CODIGO_RESPUESTA:= 1;
    PAR_MENSAJE_RESPUESTA:='Consumo Exitoso';

 <<FIN>>
    PAR_CODIGO_RESPUESTA:=PAR_CODIGO_RESPUESTA;
    PAR_MENSAJE_RESPUESTA:=PAR_MENSAJE_RESPUESTA;

EXCEPTION 
    WHEN OTHERS THEN 
         PAR_CODIGO_RESPUESTA:= 99;
    PAR_MENSAJE_RESPUESTA:='Error Consumo';
    GUARDAR_LOG_ERROR(PAR_NOMBRE_PACKAGE =>L_NOMBRE_PACKAGE, 
                    PAR_NOMBRE_PROCEDIMIENTO=>L_NOMBRE_PROCEDIMIENTO,
                    PAR_PARAMETROS=>L_PARAMETROS,
                    PAR_CODIGO_RESPUESTA=>SQLCODE,
                    PAR_MENSAJE_RESPUESTA=> SQLERRM||DBMS_UTILITY.format_error_backtrace);



END CONSULTAR_MARCAS;





PROCEDURE CONSULTAR_SERVICIOS(
                        PAR_SERVICIOS OUT SYS_REFCURSOR,   
                        PAR_CODIGO_RESPUESTA OUT VARCHAR2,
                        PAR_MENSAJE_RESPUESTA OUT VARCHAR2)
                        AS
  L_NOMBRE_PROCEDIMIENTO VARCHAR2(50):='CONSULTAR_MARCAS';
  L_PARAMETROS VARCHAR2(4000):='';
  
 BEGIN
OPEN PAR_SERVICIOS FOR SELECT
                        PK_SERVICIOS,
                        NOMBRE_SERVICIO
                    FROM
                        SERVICIOS;

    PAR_CODIGO_RESPUESTA:= 1;
    PAR_MENSAJE_RESPUESTA:='Consumo Exitoso';

 <<FIN>>
    PAR_CODIGO_RESPUESTA:=PAR_CODIGO_RESPUESTA;
    PAR_MENSAJE_RESPUESTA:=PAR_MENSAJE_RESPUESTA;

EXCEPTION 
    WHEN OTHERS THEN 
         PAR_CODIGO_RESPUESTA:= 99;
    PAR_MENSAJE_RESPUESTA:='Error Consumo';
    GUARDAR_LOG_ERROR(PAR_NOMBRE_PACKAGE =>L_NOMBRE_PACKAGE, 
                    PAR_NOMBRE_PROCEDIMIENTO=>L_NOMBRE_PROCEDIMIENTO,
                    PAR_PARAMETROS=>L_PARAMETROS,
                    PAR_CODIGO_RESPUESTA=>SQLCODE,
                    PAR_MENSAJE_RESPUESTA=> SQLERRM||DBMS_UTILITY.format_error_backtrace);



END CONSULTAR_SERVICIOS;


PROCEDURE CREAR_MANTENIMIENTO(
                        PAR_SERVICIOS IN VARCHAR2,
                        PAR_PLACA IN VEHICULOS.PLACA%TYPE,
                        PAR_CODIGO_RESPUESTA OUT VARCHAR2,
                        PAR_MENSAJE_RESPUESTA OUT VARCHAR2)
                        AS
  L_NOMBRE_PROCEDIMIENTO VARCHAR2(50):='CREAR_MANTENIMIENTO';
  L_PARAMETROS VARCHAR2(4000):='';
  ID_MANTENIMIENTO NUMBER;
  PAR_TIEMPO NUMBER;
    V_SERVICIO_ID NUMBER;
 BEGIN
      
 INSERT INTO MANTENIMIENTOS (
    PK_PLACA
   ) VALUES (
  PAR_PLACA
) RETURNING PK_MANTENIMIENTOS INTO ID_MANTENIMIENTO;     
      
   FOR i IN 1 .. LENGTH(PAR_SERVICIOS) - 1 LOOP
   --RAISE_aPPLICATION_eRROR(-20000, i);
        V_SERVICIO_ID :=TO_NUMBER(SUBSTR(i, 1)); 
        
        INSERT INTO SERVICIOS_X_MANTENIMIENTO (PK_SERVICIO, PK_MANTENIMIENTO)
        VALUES (V_SERVICIO_ID, ID_MANTENIMIENTO);
    END LOOP;

    PAR_CODIGO_RESPUESTA:= 1;
    PAR_MENSAJE_RESPUESTA:='Consumo Exitoso';

 <<FIN>>
    PAR_CODIGO_RESPUESTA:=PAR_CODIGO_RESPUESTA;
    PAR_MENSAJE_RESPUESTA:=PAR_MENSAJE_RESPUESTA;

EXCEPTION 
    WHEN OTHERS THEN 
     PAR_CODIGO_RESPUESTA:= 99;
    PAR_MENSAJE_RESPUESTA:='Error Consumo';
    GUARDAR_LOG_ERROR(PAR_NOMBRE_PACKAGE =>L_NOMBRE_PACKAGE, 
                    PAR_NOMBRE_PROCEDIMIENTO=>L_NOMBRE_PROCEDIMIENTO,
                    PAR_PARAMETROS=>L_PARAMETROS,
                    PAR_CODIGO_RESPUESTA=>SQLCODE,
                    PAR_MENSAJE_RESPUESTA=> SQLERRM||DBMS_UTILITY.format_error_backtrace);



END CREAR_MANTENIMIENTO;



PROCEDURE ASIGNAR_MECANICO(
                        PAR_MANTENIMIENTO IN MANTENIMIENTOS.PK_MANTENIMIENTOS%TYPE,
                        PAR_TIPO_DOCUMENTO IN MANTENIMIENTOS.MEC_TIPO_DOCUMENTO%TYPE,
                        PAR_DOCUMENTO IN MANTENIMIENTOS.MEC_DOCUMENTO%TYPE,
                        PAR_CODIGO_RESPUESTA OUT VARCHAR2,
                        PAR_MENSAJE_RESPUESTA OUT VARCHAR2)
                        AS
  L_NOMBRE_PROCEDIMIENTO VARCHAR2(50):='CREAR_MANTENIMIENTO';
  L_PARAMETROS VARCHAR2(4000):='';
  ID_MANTENIMIENTO NUMBER;
  PAR_TIEMPO NUMBER;
    V_SERVICIO_ID NUMBER;
 BEGIN
      

UPDATE MANTENIMIENTOS
SET
    MEC_TIPO_DOCUMENTO = PAR_TIPO_DOCUMENTO,
    MEC_DOCUMENTO=PAR_DOCUMENTO
WHERE
    PK_MANTENIMIENTOS = PAR_MANTENIMIENTO;


    PAR_CODIGO_RESPUESTA:= 1;
    PAR_MENSAJE_RESPUESTA:='Consumo Exitoso';

 <<FIN>>
    PAR_CODIGO_RESPUESTA:=PAR_CODIGO_RESPUESTA;
    PAR_MENSAJE_RESPUESTA:=PAR_MENSAJE_RESPUESTA;

EXCEPTION 
    WHEN OTHERS THEN 
     PAR_CODIGO_RESPUESTA:= 99;
    PAR_MENSAJE_RESPUESTA:='Error Consumo';
    GUARDAR_LOG_ERROR(PAR_NOMBRE_PACKAGE =>L_NOMBRE_PACKAGE, 
                    PAR_NOMBRE_PROCEDIMIENTO=>L_NOMBRE_PROCEDIMIENTO,
                    PAR_PARAMETROS=>L_PARAMETROS,
                    PAR_CODIGO_RESPUESTA=>SQLCODE,
                    PAR_MENSAJE_RESPUESTA=> SQLERRM||DBMS_UTILITY.format_error_backtrace);



END ASIGNAR_MECANICO;


END CARCENTER;

/
